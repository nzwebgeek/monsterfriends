{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchField","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"8NAuBeA,EApBE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,cCWTC,EAdU,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aACnC,OAEC,qBAAKC,UAAU,mCAAf,SACG,uBACIC,KAAK,SACLC,YAAY,kBACZC,SAAUJ,OCCNK,EARO,SAACC,GACnB,OACI,qBAAKC,MAAO,CAACC,SAAU,UAAWC,OAAQ,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,YCkBLC,E,kDAnBZ,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHG,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACI,OAAGG,KAAKJ,MAAMC,SACN,uDAEDG,KAAKX,MAAMK,a,GAjBGQ,aCiDbC,G,wDA3CX,aAAc,IAAD,8BACT,gBAaRC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAbtC,EAAKX,MAAQ,CACTjB,OAAO,GACPG,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACf0B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACtB,OAAOiC,S,oBAQ5C,WACI,MAA6BZ,KAAKJ,MAA1BjB,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,YACV+B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAEzD,OAAoB,IAAjBtC,EAAOwC,OACC,yCAIH,sBAAKnC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,4BACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQkC,e,GAlCpBX,c,MCDlBkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAGXpB,c","file":"static/js/main.dea87d9f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    if(true){\r\n        throw new Error('Noooooooo');\r\n    }\r\n    const cardcomponent = robots.map((user,index) =>{\r\n        return(\r\n        <Card \r\n        key={index} \r\n        id={robots[index].id} \r\n        name={robots[index].name}\r\n        email={robots[index].email}\r\n        />\r\n        );\r\n    })\r\n    return(\r\n        <div>\r\n            {cardcomponent}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\nexport const SearchBox = ({searchField,searchChange}) => {\r\n    return (\r\n\r\n     <div className='pa2 ba b--green bg-lightest-blue'>\r\n        <input \r\n            type='search' \r\n            placeholder='search monsters'\r\n            onChange={searchChange}\r\n          />  \r\n     </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n"," import React from 'react'\r\n \r\n export const Scroll = (props) => {\r\n     return (\r\n         <div style={{overflow: 'scrollY', border: '5px solid black', height:'500px'}}>\r\n             {props.children}\r\n         </div>\r\n     )\r\n }\r\n\r\n export default Scroll;\r\n ","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundary extends Component{\r\n\r\n   constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        hasError: false\r\n    }\r\n   }\r\n\r\n   componentDidCatch(error, info){\r\n    this.setState({ hasError: true })\r\n   }\r\n    \r\n   render(){\r\n       if(this.state.hasError){\r\n        return <h1>OOOpppppsss, bad luck</h1>\r\n       }\r\n       return this.props.children;\r\n   }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport './App.css';\r\n// smart components below, Mounting\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n            searchField: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=>response.json())\r\n            .then(users =>this.setState({robots:users}));\r\n            \r\n    }\r\n// unmount removes component\r\nonSearchChange=(event)=>{\r\n    this.setState({ searchField: event.target.value})\r\n}\r\n\r\n    render(){\r\n        const { robots, searchField}=this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n            })\r\n        if(robots.length ===0){\r\n            return <h1>Loading</h1>\r\n        }\r\n        else{\r\n            return(\r\n                <div className='tc'>\r\n                <h1 className='f1'>MonsterFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                    <CardList robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n            );\r\n        }\r\n       \r\n    }\r\n}\r\n// npm run build (when finished)\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n// Place & Call all components from App.js here\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\nexport default App;\n"],"sourceRoot":""}